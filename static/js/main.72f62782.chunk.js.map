{"version":3,"sources":["components/Nominations.js","components/SearchBox.js","components/SearchResults.js","App.js","reportWebVitals.js","index.js"],"names":["Nominations","props","movies","map","movie","Title","Year","className","onClick","handleNominationsClick","SearchBox","value","onChange","event","setSearchValue","target","placeholder","SearchResults","currentSearch","id","index","disabled","nominations","some","nomination","imdbID","App","useState","setMovies","setNominations","searchValue","getMovieRequest","a","url","fetch","response","json","responseJson","Search","useEffect","movieNominations","JSON","parse","localStorage","getItem","saveToLocalStorage","items","setItem","stringify","newNominationList","length","alert","filter","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"gQAgBeA,EAdK,SAACC,GACjB,OACI,qCACA,6CACA,6BACKA,EAAMC,OAAOC,KAAI,SAACC,GAAD,OAAY,+BAC1B,8BAAIA,EAAMC,MAAV,KAAmBD,EAAME,KAAzB,OACA,wBAAQC,UAAU,oBAAoBC,QAAS,kBAAMP,EAAMQ,uBAAuBL,IAAlF,gCCKDM,EAZG,SAACT,GACf,OACI,8BACI,uBACIU,MAAOV,EAAMU,MACbC,SAAU,SAACC,GAAD,OAAWZ,EAAMa,eAAeD,EAAME,OAAOJ,QACvDK,YAAY,wBCUbC,EAhBO,SAAChB,GACnB,OACI,qCACA,+CAAkBA,EAAMiB,cAAxB,OACA,oBAAIC,GAAG,cAAP,SACKlB,EAAMC,OAAOC,KAAI,SAACC,EAAOgB,GAAR,OAAmB,+BACjC,8BAAIhB,EAAMC,MAAV,KAAmBD,EAAME,KAAzB,OACA,wBAAQe,SACJpB,EAAMqB,YAAYC,MAAK,SAACC,GAAD,OAAgBA,EAAWC,QAAUrB,EAAMqB,UACpElB,UAAU,iBAAiBC,QAAS,kBAAMP,EAAMQ,uBAAuBL,IAFzE,kCCyEDsB,EA5EH,WACV,MAA4BC,mBAAS,IAArC,mBAAOzB,EAAP,KAAe0B,EAAf,KACA,EAAsCD,mBAAS,IAA/C,mBAAOL,EAAP,KAAoBO,EAApB,KACA,EAAsCF,mBAAS,IAA/C,mBAAOG,EAAP,KAAoBhB,EAApB,KACMiB,EAAe,uCAAG,WAAOD,GAAP,mBAAAE,EAAA,6DAChBC,EADgB,oCACmBH,EADnB,wCAGCI,MAAMD,GAHP,cAGhBE,EAHgB,gBAIKA,EAASC,OAJd,QAIhBC,EAJgB,QAMLC,QACfV,EAAUS,EAAaC,QAPH,2CAAH,sDAWrBC,qBAAU,WACRR,EAAgBD,KACf,CAACA,IAEJS,qBAAU,WACR,IAAMC,EAAmBC,KAAKC,MAC5BC,aAAaC,QAAQ,wBAGvBf,EAAeW,KACd,IAEH,IAAMK,EAAqB,SAACC,GAC1BH,aAAaI,QAAQ,sBAAuBN,KAAKO,UAAUF,KAoB7D,OACE,sBAAK3B,GAAG,OAAR,UACE,8CACA,oCACE,oDACA,cAAC,EAAD,CAAWW,YAAaA,EAAahB,eAAgBA,OAEvD,oCACE,8BACE,cAAC,EAAD,CACEZ,OAAQA,EACRoB,YAAaA,EACbJ,cAAeY,EACfrB,uBA9BY,SAACL,GACrB,IAAM6C,EAAiB,sBAAO3B,GAAP,CAAoBlB,IACvC6C,EAAkBC,QAAU,GAC9BrB,EAAeoB,GACfJ,EAAmBI,IACdE,MAAM,6CA4BT,8BACE,cAAC,EAAD,CACEjD,OAAQoB,EACRJ,cAAeY,EACfrB,uBA7Be,SAACL,GACxB,IAAM6C,EAAoB3B,EAAY8B,QACpC,SAAC5B,GAAD,OAAgBA,EAAWC,SAAWrB,EAAMqB,UAG9CI,EAAeoB,GACfJ,EAAmBI,eCvCRI,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.72f62782.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst Nominations = (props) => {\r\n    return (\r\n        <>\r\n        <h3>Nominations</h3>\r\n        <ul>\r\n            {props.movies.map((movie) => (<li>\r\n                <p>{movie.Title} ({movie.Year})</p>\r\n                <button className=\"delete-nomination\" onClick={() => props.handleNominationsClick(movie)}>Delete</button>\r\n            </li>))}\r\n        </ul>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Nominations;","import React from 'react';\r\n\r\nconst SearchBox = (props) => {\r\n    return (\r\n        <div>\r\n            <input \r\n                value={props.value}\r\n                onChange={(event) => props.setSearchValue(event.target.value)}\r\n                placeholder='Type Movie Title'\r\n            ></input>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SearchBox;","import React from 'react';\r\n\r\nconst SearchResults = (props) => {\r\n    return (\r\n        <>\r\n        <h3>Results for \"{props.currentSearch}\"</h3>\r\n        <ul id=\"result-list\"> \r\n            {props.movies.map((movie, index) => (<li>\r\n                <p>{movie.Title} ({movie.Year})</p>\r\n                <button disabled={\r\n                    props.nominations.some((nomination) => nomination.imdbID == movie.imdbID)\r\n                } className=\"add-nomination\" onClick={() => props.handleNominationsClick(movie)}>Nominate</button>\r\n            </li>))}\r\n        </ul>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default SearchResults;","import React, { useState, useEffect } from \"react\";\nimport \"./App.css\";\nimport Nominations from \"./components/Nominations\";\nimport SearchBox from \"./components/SearchBox\";\nimport SearchResults from \"./components/SearchResults\";\n\nconst App = () => {\n  const [movies, setMovies] = useState([]);\n  const [nominations, setNominations] = useState([]);\n  const [searchValue, setSearchValue] = useState(\"\");\n  const getMovieRequest = async (searchValue) => {\n    const url = `http://www.omdbapi.com/?s=${searchValue}&apikey=e116be63&Type=movie`;\n\n    const response = await fetch(url);\n    const responseJson = await response.json();\n\n    if (responseJson.Search) {\n      setMovies(responseJson.Search);\n    }\n  };\n\n  useEffect(() => {\n    getMovieRequest(searchValue);\n  }, [searchValue]);\n\n  useEffect(() => {\n    const movieNominations = JSON.parse(\n      localStorage.getItem(\"current-nominations\")\n    );\n\n    setNominations(movieNominations);\n  }, []);\n\n  const saveToLocalStorage = (items) => {\n    localStorage.setItem(\"current-nominations\", JSON.stringify(items));\n  };\n\n  const addNomination = (movie) => {\n    const newNominationList = [...nominations, movie];\n    if (newNominationList.length <= 5) {\n      setNominations(newNominationList);\n      saveToLocalStorage(newNominationList);\n    } else alert(\"Maxium amount of Nominations reached\");\n  };\n\n  const deleteNomination = (movie) => {\n    const newNominationList = nominations.filter(\n      (nomination) => nomination.imdbID !== movie.imdbID\n    );\n\n    setNominations(newNominationList);\n    saveToLocalStorage(newNominationList);\n  };\n\n  return (\n    <div id=\"main\">\n      <h1>The Shoppies</h1>\n      <section>\n        <h2>Movie Title Search</h2>\n        <SearchBox searchValue={searchValue} setSearchValue={setSearchValue} />\n      </section>\n      <section>\n        <div>\n          <SearchResults\n            movies={movies}\n            nominations={nominations}\n            currentSearch={searchValue}\n            handleNominationsClick={addNomination}\n          />\n        </div>\n        <div>\n          <Nominations\n            movies={nominations}\n            currentSearch={searchValue}\n            handleNominationsClick={deleteNomination}\n          />\n        </div>\n      </section>\n    </div>\n  );\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}